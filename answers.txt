1. When you add a number to a string, the result is a string because the computer automatically changes the number into a string to make it easier to combine the two. This happens because the + symbol can mean "add" for numbers or "join" for strings. If one side is a string, the computer assumes you want to join them together as text. For example, 5 + "3" becomes "5" + "3", which equals "53". Itâ€™s like sticking two pieces of text together instead of doing math.
2. Using the == operator can cause a bug when comparing values of different types in languages like JavaScript because it performs type coercion. For example, 0 == false evaluates to true because JavaScript converts false to 0 before comparing. This can lead to unexpected behavior if the intent was to strictly compare values without conversion.
3. Probably assignment or bitwise operators, and I can't really say a specific reason why, numbers generally aren't my strong suit, so it takes me awhile and a lot of examples to really wrap my head around things.
4. The modulus operator (%) is used to find the remainder after dividing one number by another. A common situation for using it is determining if a number is even or odd.